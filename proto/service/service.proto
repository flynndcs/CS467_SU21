syntax = "proto3";
package service;
option go_package = "CS467_SU21/proto/service";

import "google/api/annotations.proto";
import "service/messages.proto";

service Gateway {
  rpc GetStatus (StatusRequest) returns (StatusReply) {
    option (google.api.http) = {
      get: "/api/status"
    };
  }

  /* PRODUCT ENDPOINTS */

  rpc GetProduct(ProductIdentifier) returns (StoredProduct){
    option (google.api.http) = {
      get: "/api/product"
    };
  }

  rpc GetProducts(GetProductsRequest) returns (StoredProducts){
    option (google.api.http) = {
      get: "/api/product/search"
    };
  }

  rpc PutProduct(PutProductRequest) returns (StoredProduct){
    option (google.api.http) = {
      post: "/api/product"
      body: "*"
    };
  }

  rpc ClearProduct(ClearProductMessage) returns (ClearProductMessage){
    option (google.api.http) = {
      delete: "/api/product"
    };
  }

  /* LOCATION ENDPOINTS*/  

  rpc GetLocation(LocationIdentifier) returns (StoredLocation){
    option (google.api.http) = {
      get: "/api/location"
    };
  }

  rpc PutLocation(PutLocationMessage) returns (StoredLocation){
    option (google.api.http) = {
      post: "/api/location"
      body: "*"
    };
  }

  rpc SendProduct(MoveProductMessage) returns (MoveProductMessage){
    option (google.api.http) = {
      post: "/api/location/sendProduct"
      body: "*"
    };
  }

  rpc ReceiveProduct(MoveProductMessage) returns (MoveProductMessage){
    option (google.api.http) = {
      post: "/api/location/receiveProduct"
      body: "*"
    };
  }
}

service Product{
  rpc GetProductStatus (ProductStatusRequest) returns (ProductStatusReply){}
  rpc GetProduct(ProductIdentifier) returns (StoredProduct){}
  rpc GetProducts(GetProductsRequest) returns (StoredProducts){}
  rpc PutProduct (PutProductRequest) returns (StoredProduct){}
  rpc UpdateProduct (StoredProduct) returns (StoredProduct){}
  rpc ClearProduct (ClearProductMessage) returns (ClearProductMessage){}
}

service Location{
  rpc GetLocation(LocationIdentifier) returns (StoredLocation){}
  rpc PutLocation(PutLocationMessage) returns (StoredLocation){}
  rpc UpdateLocation(StoredLocation) returns (StoredLocation){}
  rpc SendProduct(MoveProductMessage) returns (MoveProductMessage){}
  rpc ReceiveProduct(MoveProductMessage) returns (MoveProductMessage){}
}